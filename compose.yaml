services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.6.1
    container_name: zookeeper
    ports:
      - 2181:2181
    environment:
      - ZOOKEEPER_CLIENT_PORT=2181
      - ZOOKEEPER_TICK_TIME=2000
    healthcheck:
      test: [ "CMD-SHELL", "echo stat | nc -w 2 localhost 2181" ]
      interval: 20s
      timeout: 10s
      retries: 5

  kafka:
    image: confluentinc/cp-kafka:7.6.1
    container_name: kafka
    ports:
      - 10002:10002
    depends_on:
      zookeeper:
        condition: service_healthy
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:10002
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - kafka_gorch:/var/lib/kafka/data

  postgres:
    image: postgres:16-alpine
    container_name: postgres
    environment:
      POSTGRES_DB: metrics
      POSTGRES_PASSWORD: metrics
      POSTGRES_USER: metrics
    ports:
      - 10001:5432
    volumes:
      - ./metrics-consumer/src/main/resources/schema.sql:/docker-entrypoint-initdb.d/schema.sql

  monitored-app:
    build:
      context: ./
      dockerfile: monitored-app/.docker/Dockerfile
    container_name: monitored-app
    depends_on:
      - metrics-producer
    environment:
      SPRING_PROFILES_ACTIVE: docker

  metrics-producer:
    build:
      context: ./
      dockerfile: metrics-producer/.docker/Dockerfile
    container_name: metrics-producer
    depends_on:
      - kafka
    environment:
      SPRING_PROFILES_ACTIVE: docker
    ports:
      - 10020:10020

  metrics-consumer:
    build:
      context: ./
      dockerfile: metrics-consumer/.docker/Dockerfile
    container_name: metrics-consumer
    depends_on:
      - kafka
      - postgres
    environment:
      SPRING_PROFILES_ACTIVE: docker
    ports:
      - 10000:10000

volumes:
  kafka_gorch:
