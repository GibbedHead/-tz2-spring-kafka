{
	"info": {
		"_postman_id": "2e871f09-fa61-45c5-945c-69e65738bdf2",
		"name": "SpringKafkaHomework",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "33879345"
	},
	"item": [
		{
			"name": "Producer",
			"item": [
				{
					"name": "API",
					"item": [
						{
							"name": "Add metric",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"metricName\": \"Some metric\",\r\n    \"metricValue\": 2.0,\r\n    \"metricTimestamp\": \"2024-05-09T12:00:00\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{producerBaseUrl}}",
									"host": [
										"{{producerBaseUrl}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Tests",
					"item": [
						{
							"name": "Add valid",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([201]);\r",
											"});\r",
											"pm.test(\"Has response body\", function () {\r",
											"    pm.response.to.be.withBody;\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"metricName\": \"Some metric\",\r\n    \"metricValue\": 2.0,\r\n    \"metricTimestamp\": \"2024-05-09T12:00:00\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{producerBaseUrl}}",
									"host": [
										"{{producerBaseUrl}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add invalid",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([400]);\r",
											"});\r",
											"pm.test(\"Response body contains 'Validation failed' message\", function () {\r",
											"    var responseBody = pm.response.text();\r",
											"    pm.expect(responseBody).to.include(\"Validation failed\");\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"metricTimestamp\": \"2024-05-09T12:00:00\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{producerBaseUrl}}",
									"host": [
										"{{producerBaseUrl}}"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Consumer",
			"item": [
				{
					"name": "API",
					"item": [
						{
							"name": "Get uniq metrics",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{consumerBaseUrl}}",
									"host": [
										"{{consumerBaseUrl}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get process.cpu.usage",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{consumerBaseUrl}}/process.cpu.usage",
									"host": [
										"{{consumerBaseUrl}}"
									],
									"path": [
										"process.cpu.usage"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Tests",
					"item": [
						{
							"name": "Add 1 'Some metric 1'",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"metricName\": \"Some metric 1\",\r\n    \"metricValue\": 1.0,\r\n    \"metricTimestamp\": \"{{date1}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{producerBaseUrl}}",
									"host": [
										"{{producerBaseUrl}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add 2 'Some metric 1'",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"metricName\": \"Some metric 1\",\r\n    \"metricValue\": 2.0,\r\n    \"metricTimestamp\": \"{{date2}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{producerBaseUrl}}",
									"host": [
										"{{producerBaseUrl}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add 1 'Some metric 2'",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"metricName\": \"Some metric 2\",\r\n    \"metricValue\": 1.0,\r\n    \"metricTimestamp\": \"{{date3}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{producerBaseUrl}}",
									"host": [
										"{{producerBaseUrl}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add 3 'Some metric 1'",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"metricName\": \"Some metric 1\",\r\n    \"metricValue\": 3.0,\r\n    \"metricTimestamp\": \"{{date4}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{producerBaseUrl}}",
									"host": [
										"{{producerBaseUrl}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Test 'Some metric 1', 'Some metric 2' added",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);\r",
											"});\r",
											"pm.test(\"Has json body\", function () {\r",
											"    pm.response.to.be.withBody;\r",
											"    pm.response.to.be.json;\r",
											"});\r",
											"pm.test(\"Has add metric names\", function () {\r",
											"    var responseJson = pm.response.json();\r",
											"    pm.expect(responseJson).to.include(\"Some metric 1\");\r",
											"    pm.expect(responseJson).to.include(\"Some metric 2\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{consumerBaseUrl}}",
									"host": [
										"{{consumerBaseUrl}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Test 'Some metric 1' in date range",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);\r",
											"});\r",
											"pm.test(\"Has json body\", function () {\r",
											"    pm.response.to.be.withBody;\r",
											"    pm.response.to.be.json;\r",
											"});\r",
											"pm.test(\"Has one metic from Add 3 'Some metric 1'\", function () {\r",
											"    var responseJson = pm.response.json();\r",
											"    pm.expect(responseJson[0].metricValue).to.eql(3.0);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{consumerBaseUrl}}/Some metric 1?startDate={{date3}}&endDate={{date6}}",
									"host": [
										"{{consumerBaseUrl}}"
									],
									"path": [
										"Some metric 1"
									],
									"query": [
										{
											"key": "startDate",
											"value": "{{date3}}"
										},
										{
											"key": "endDate",
											"value": "{{date6}}"
										}
									]
								}
							},
							"response": []
						}
					]
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "consumerBaseUrl",
			"value": "http://localhost:10000/metrics",
			"type": "string"
		},
		{
			"key": "producerBaseUrl",
			"value": "http://localhost:10020/metrics",
			"type": "string"
		},
		{
			"key": "date1",
			"value": "2024-05-09T12:01:00",
			"type": "string"
		},
		{
			"key": "date2",
			"value": "2024-05-09T12:02:00",
			"type": "string"
		},
		{
			"key": "date3",
			"value": "2024-05-09T12:03:00",
			"type": "string"
		},
		{
			"key": "date4",
			"value": "2024-05-09T12:04:00",
			"type": "string"
		},
		{
			"key": "date5",
			"value": "2024-05-09T12:05:00",
			"type": "string"
		},
		{
			"key": "date6",
			"value": "2024-05-09T12:06:00",
			"type": "string"
		}
	]
}